(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{gxwE:function(e,t,r){"use strict";r.r(t),r.d(t,"_frontmatter",(function(){return n})),r.d(t,"default",(function(){return l}));r("1c7q"),r("abGl"),r("gZHo"),r("Fdmb"),r("Ir+3"),r("2mQt");var o=r("/FXl"),c=r("TjRS");r("aD51");function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e}).apply(this,arguments)}var n={};void 0!==n&&n&&n===Object(n)&&Object.isExtensible(n)&&!n.hasOwnProperty("__filemeta")&&Object.defineProperty(n,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/introduction.md"}});var s={_frontmatter:n},i=c.a;function l(e){var t=e.components,r=function(e,t){if(null==e)return{};var r,o,c={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,["components"]);return Object(o.b)(i,a({},s,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"introduction"},"Introduction"),Object(o.b)("h2",{id:"motivation"},"Motivation"),Object(o.b)("p",null,"Such projects as ",Object(o.b)("a",a({parentName:"p"},{href:"https://github.com/reduxjs/reselect"}),"Reselect")," and ",Object(o.b)("a",a({parentName:"p"},{href:"https://github.com/toomuchdesign/re-reselect"}),"Re-reselect")," try to solve the task of memoization. But there is no standard solutions for some applied problems. This library was created to try to systematically solve the following problems:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Work with optional objects as a source for selection."),Object(o.b)("li",{parentName:"ul"},"Binding parametric selectors to specific property values."),Object(o.b)("li",{parentName:"ul"},"Adaptation of parametric selectors to the new parameter interface (useful for creating parametric ",Object(o.b)("a",a({parentName:"li"},{href:"https://github.com/reduxjs/reselect#createstructuredselectorinputselectors-selectorcreator--createselector"}),"structured selectors"),")."),Object(o.b)("li",{parentName:"ul"},"Using selection results as parameters for a new selection."),Object(o.b)("li",{parentName:"ul"},"Calculating an aggregate value from a collection of selector results."),Object(o.b)("li",{parentName:"ul"},"Structuring of selection results (more proper typed version of ",Object(o.b)("a",a({parentName:"li"},{href:"https://github.com/reduxjs/reselect#createstructuredselectorinputselectors-selectorcreator--createselector"}),"structured selector")," and ",Object(o.b)("a",a({parentName:"li"},{href:"https://github.com/toomuchdesign/re-reselect#createStructuredCachedSelector"}),"cached structured selector"),")."),Object(o.b)("li",{parentName:"ul"},"Implementation of key selectors composition implementation (useful for ",Object(o.b)("a",a({parentName:"li"},{href:"https://github.com/toomuchdesign/re-reselect#keyselectorcreator"}),"key selector creator")," usages).")),Object(o.b)("h2",{id:"principles"},"Principles"),Object(o.b)("h3",{id:"dev-tool-integration"},"Dev Tool Integration"),Object(o.b)("p",null,"All utility selectors should be displayed in ",Object(o.b)("a",a({parentName:"p"},{href:"https://github.com/skortchmark9/reselect-tools"}),"dev tools")," adequately. This is necessary to understand how the selector is related."),Object(o.b)("h3",{id:"dependency-support"},"Dependency Support"),Object(o.b)("p",null,"All selectors must describe their dependencies correctly."),Object(o.b)("h3",{id:"typescript-support"},"TypeScript Support"),Object(o.b)("p",null,"This library is written in ",Object(o.b)("a",a({parentName:"p"},{href:"https://www.typescriptlang.org/"}),"TypeScript")," and initially focused on static type checking. All utility selectors are typed and tested at compile time."))}l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/introduction.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-introduction-md-d1e35f263b2848abaaa8.js.map