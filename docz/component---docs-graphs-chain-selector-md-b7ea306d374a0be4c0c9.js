(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"7rWG":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return o})),n.d(t,"default",(function(){return h}));n("1c7q"),n("abGl"),n("gZHo"),n("Fdmb"),n("Ir+3"),n("2mQt");var r=n("/FXl"),i=n("TjRS"),c=n("gVlz");n("aD51");function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var o={};void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/graphs/chain-selector.md"}});var s={_frontmatter:o},l=i.a;function h(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,r,i={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,["components"]);return Object(r.b)(l,a({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"chain-selector"},"Chain Selector"),Object(r.b)("h2",{id:"entity-chain"},"Entity Chain"),Object(r.b)("iframe",{style:c.a,src:"https://sgrishchenko.github.io/reselect-utils/storybook/iframe.html?id=createchainselector--entity-chain-example"}),Object(r.b)("h2",{id:"aggregation"},"Aggregation"),Object(r.b)("iframe",{style:c.a,src:"https://sgrishchenko.github.io/reselect-utils/storybook/iframe.html?id=createchainselector--aggregation-example"}),Object(r.b)("h2",{id:"switch-dependency"},"Switch Dependency"),Object(r.b)("iframe",{style:c.a,src:"https://sgrishchenko.github.io/reselect-utils/storybook/iframe.html?id=createchainselector--switch-dependency-example"}))}h&&h===Object(h)&&Object.isExtensible(h)&&!h.hasOwnProperty("__filemeta")&&Object.defineProperty(h,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/graphs/chain-selector.md"}}),h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-graphs-chain-selector-md-b7ea306d374a0be4c0c9.js.map